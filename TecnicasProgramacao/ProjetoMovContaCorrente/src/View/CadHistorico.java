/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import DAO.Historico;
import DAO.connectDAO;
import javax.swing.JOptionPane;

/**
 *
 * @author Alunos
 */
public class CadHistorico extends javax.swing.JFrame {

    /**
     * Creates new form Historico
     */
    public CadHistorico() {
        initComponents();
    }
    String operacaoAtivaGlobal = "Nenhum";
    public CadHistorico(String operacaoAtiva){
        initComponents();
        operacaoAtivaGlobal = operacaoAtiva;
        String operacao = "Incluir";
        //INCLUSÃO
        if(operacaoAtiva.equals(operacao)){
            SetFormVisible(true);
            jButton1.setText(operacaoAtivaGlobal);
        }
        operacao = "Alterar";
        if(operacaoAtiva.equals(operacao)){
            SetFormVisible(false);
            jButton1.setText("Pesquisar");
        }
        operacao = "Excluir";
        if(operacaoAtiva.equals(operacao)){
            SetFormVisible(false);
            jButton1.setText("Pesquisar");
        }
    }
    
    Historico h = new Historico();

    //UTEIS
    private void SetFormVisible(Boolean bool){
        jLabel1.setVisible(!bool);
        jLabel2.setVisible(bool);
        jTextArea1.setVisible(bool);
        jTextField1.setVisible(!bool);
    }
    
    private void ClearFormInputs(){
        jTextArea1.setText("");
        jTextField1.setText("");
    }
    
    private void SetFormEditable(boolean bool){
        jTextArea1.setEditable(bool);
        jTextField1.setEditable(bool);
    }
    
    private void SetFormValues(){
        jTextArea1.setText(h.getHistorico());
        jTextField1.setText(Integer.toString(h.getId_his()));
    }
    
    private void SetHistoricoObjectValues(){
        h.setHistorico(jTextArea1.getText());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        btnLer = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Id do Histórico");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 18, -1, -1));
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 15, 71, -1));

        jLabel2.setText("Histórico");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 49, -1, -1));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 77, 380, 140));

        jButton1.setText("Gravar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 271, -1, -1));

        btnLer.setText("Ler");
        btnLer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLerActionPerformed(evt);
            }
        });
        getContentPane().add(btnLer, new org.netbeans.lib.awtextra.AbsoluteConstraints(322, 271, -1, -1));

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });
        getContentPane().add(btnLimpar, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 271, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Gravar os dados no objeto cliente c
        String operacao = "Incluir";
        if(operacaoAtivaGlobal.equals(operacao)){
            SetHistoricoObjectValues();
            if(h.getIsValid()){
                //Inserção no banco de dados
                connectDAO objcon = new connectDAO();
                objcon.connectDB();
                objcon.insereRegistroJFBD("HISTORICOS", h.dadosSQLValues());
                ClearFormInputs();
            }
            else{
                h.ShowErrorValidateMessage("Campos preenchidos incorretamente");
                h.setIsValid(true);
            }
        }
        operacao = "Alteração";
        if(operacaoAtivaGlobal.equals((operacao))){
            SetHistoricoObjectValues();
            //ALteração no banco de dados
            if(h.getIsValid()){
                //Inserção no banco de dados
                connectDAO objcon = new connectDAO();
                objcon.connectDB();
                objcon.alteraRegistroJFDB("HISTORICOS", h.alteraDadosSQLValues(), 
                "ID_HIS=" +jTextField1.getText());
                
                //Limpando todos os textos
                ClearFormInputs();
                SetFormVisible(false);
                jButton1.setText("Pesquisar");
                operacaoAtivaGlobal = "Alterar";
                return;
            }
            else{
                h.ShowErrorValidateMessage("Campos preenchidos incorretamente");
                h.setIsValid(true);
            }
        }
        
        operacao = "Alterar";
        if(operacaoAtivaGlobal.equals((operacao))){
            //Pesquisa o clinte com o ID especificado
            connectDAO objcon = new connectDAO();
            h = objcon.pesquisaHistoricoJFDB("HISTORICOS", "ID_HIS = '" + jTextField1.getText() + "'");
            
            if(h != null){
                SetFormValues();
                SetFormVisible(true);
                jButton1.setText("Alterar");
                operacaoAtivaGlobal = "Alteração";
            }
            return;
        }
        
        operacao = "Exclusão";
        if(operacaoAtivaGlobal.equals((operacao))){
            connectDAO objcon = new connectDAO();
            objcon.excluiRegistroJFDB("HISTORICOS","ID_HIS=" + jTextField1.getText());

            //Limpando todos os textos
            ClearFormInputs();
            SetFormVisible(false);
            SetFormEditable(true);
            
            jButton1.setText("Pesquisar");
            operacaoAtivaGlobal = "Excluir";
            return;
        }
        
        operacao = "Excluir";
        if(operacaoAtivaGlobal.equals((operacao))){
            //Pesquisa o cliente com o ID especificado
            connectDAO objcon = new connectDAO();
            h = objcon.pesquisaHistoricoJFDB("HISTORICOS", "ID_HIS = '" + jTextField1.getText() + "'");
            if(h != null){
                //Mostrando os campos para que possam ser alterados
                jButton1.setText("Excluir");
                operacaoAtivaGlobal = "Exclusão";
                SetFormValues();
                SetFormVisible(true);
                SetFormEditable(false);
            }
            return;
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
//        jTextArea1.setText("");
//        jTextField1.setText("");
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnLerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLerActionPerformed
//        jTextField1.setText(Integer.toString(h.getId_his()));
//        jTextArea1.setText(h.getHistorico());
    }//GEN-LAST:event_btnLerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadHistorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadHistorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadHistorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadHistorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadHistorico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLer;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
